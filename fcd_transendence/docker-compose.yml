
services:
  db:
    image: postgres:14
    container_name: db
    volumes:
      - ./db_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    command: postgres -c max_connections=200

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - backend_api
      - frontend_api
      - db
    env_file:
      - .env

  backend_api:
    container_name: backend_api
    build: ./transcendenceapi
    volumes:
      - ./transcendenceapi:/app
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - mynetwork

  frontend_api:
    container_name: frontend_api
    build: ./ft_frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend_api
    env_file:
      - .env
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  backend_api:
  frontend_api:
